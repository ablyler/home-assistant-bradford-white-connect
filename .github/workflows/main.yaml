---
name: CI

"on":
  push:
    branches:
      - main
    tags:
      - v*.*.*
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  meta:
    name: Derive Build Metadata
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Derive version string
        id: bin_version
        run: echo "bin_version=$(./.version.sh)" >> "$GITHUB_OUTPUT"
      - name: bin_version
        run: "echo bin_version: ${{ steps.bin_version.outputs.bin_version }}"
      - name: Check if this is a running version tag update
        id: running_version_tag
        run: |
          if [ -z "${{ github.event.ref }}" ]; then
              echo "is_running_version_tag_update=false" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.event.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9]+$ ]]; then
              echo "is_running_version_tag_update=true" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.event.ref }}" =~ ^refs/tags/v[0-9]+$ ]]; then
              echo "is_running_version_tag_update=true" >> "$GITHUB_OUTPUT"
          else
              echo "is_running_version_tag_update=false" >> "$GITHUB_OUTPUT"
          fi
      - name: is_running_version_tag
        run: "echo is_running_version_tag_update: ${{ steps.running_version_tag.outputs.is_running_version_tag_update }}"
    outputs:
      bin_name: ${{ github.event.repository.name }}
      bin_version: ${{ steps.bin_version.outputs.bin_version }}
      dockerhub_owner: ${{ github.repository_owner }}
      ghcr_owner: ${{ github.repository_owner }}
      packagecloud_owner: ${{ github.repository_owner }}
      packagecloud_repo: oss
      is_prerelease: >-
        ${{
          steps.running_version_tag.outputs.is_running_version_tag_update != 'true' &&
          startsWith(github.ref, 'refs/tags/v') &&
            (contains(github.ref, '-alpha.')
            || contains(github.ref, '-beta.')
            || contains(github.ref, '-rc.'))
        }}
      is_release: >-
        ${{
          steps.running_version_tag.outputs.is_running_version_tag_update != 'true' &&
          startsWith(github.ref, 'refs/tags/v') &&
            !(contains(github.ref, '-alpha.')
            || contains(github.ref, '-beta.')
            || contains(github.ref, '-rc.'))
        }}
      is_pull_request: ${{ github.event_name == 'pull_request' }}
      is_running_version_tag_update: ${{ steps.running_version_tag.outputs.is_running_version_tag_update }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: write
      checks: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install pipenv
        env:
          PIPENV_VENV_IN_PROJECT: true
        run: |
          pip install pipenv
          pipenv install
      - name: Run Trunk Check
        uses: trunk-io/trunk-action@v1
      - name: Run Home Assistant hassfest
        uses: home-assistant/actions/hassfest@master

  validate-hassfest:
    runs-on: ubuntu-latest
    name: Hassfest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Validate Hassfest
        uses: home-assistant/actions/hassfest@master

  validate-hacs:
    runs-on: ubuntu-latest
    name: HACS
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Validate HACS
        uses: hacs/action@main
        with:
          category: integration
          ignore: brands

  release:
    name: GitHub (Pre)Release
    needs: [meta, lint, validate-hassfest, validate-hacs]
    if: >-
      needs.meta.outputs.is_release == 'true' ||
      needs.meta.outputs.is_prerelease == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ needs.meta.outputs.is_prerelease == 'true' }}
          generate_release_notes: true

  tags:
    name: Update Release Tags
    needs: [meta, lint, validate-hassfest, validate-hacs, release]
    if: needs.meta.outputs.is_release == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update running major/minor version tags
        uses: sersoft-gmbh/running-release-tags-action@v3
        with:
          fail-on-non-semver-tag: true
          create-release: false
          update-full-release: false
